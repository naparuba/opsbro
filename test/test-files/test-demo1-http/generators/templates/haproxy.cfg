########## OPSBRO generated file, do not edit it

global
        log  localhost  local0 debug
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        # An alternative list with additional directives can be obtained from
        #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout check   1s
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http



frontend front_http
        bind *:80
        mode http
        default_backend back_http

backend back_http
        mode http
        balance roundrobin
        #option httpclose
        #option forwardfor
        #option log-health-checks
        #retries 3
        option httpchk OPTIONS /index.html HTTP/1.0
        http-check expect ! rstatus ^5
        default-server inter 1s fall 1 rise 1

	    # Stats
        stats enable
        stats hide-version
        stats refresh 1s
        stats show-node
        stats auth admin:admin
        stats uri  /stats


	# Real servers
    {% for node in gossip_get_alive_nodes(group='apache', if_none='raise') %}
        # in OpsBro: {{node['display_name']}}
        server {{node['name']}} {{node['addr']}}:80 check
    {% endfor %}
